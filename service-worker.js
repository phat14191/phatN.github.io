"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","6b5279bb72d6728aa71b06cd04c9e0bb"],["/static/css/main.cf5f62a0.css","81ea9330a3fed8c47137efc4c2fa9bc7"],["/static/js/main.c11743e2.js","028248a75e4470e6d9b9af7c86d4dd83"],["/static/media/Api.9f7ea97b.png","9f7ea97b68579140bf8fe4164bbf7fd6"],["/static/media/NodeJS.7d4c8e2b.png","7d4c8e2bbb9487653d186be3de698892"],["/static/media/Portfolio.52b62569.png","52b62569daa7d4840cc90d7f8afc17cf"],["/static/media/QApp.062658b7.jpg","062658b7ad7b5ea21e20755439f5d9bc"],["/static/media/blackjacklogo.4b34171e.png","4b34171e7b3074b70a86804d763523a0"],["/static/media/bootstrap.73844123.png","7384412324c769e447d3c4f86e9ff068"],["/static/media/css.f32b23d4.png","f32b23d44dc774b11041471c86be0b9a"],["/static/media/express2.53051603.svg","530516030e26a09ac38473bd5d8eff0e"],["/static/media/github.4b97a37e.png","4b97a37e4ed6e5430ddfc1248fb0487f"],["/static/media/jQuery.9999c1a8.gif","9999c1a8c347b81c5cb5df967664c4c3"],["/static/media/js.b4cc9b6d.png","b4cc9b6dc76bcc06f3d83656720ebde7"],["/static/media/mail.2fcf520a.png","2fcf520ab6aa9c416e84bf680a180075"],["/static/media/mongodb.42e30b7d.png","42e30b7d1e7e595bdf048b2e1d57fb0e"],["/static/media/nodejs.754e6aa6.png","754e6aa60030557fdab446f403dcf67b"],["/static/media/react.2803478a.bin","2803478a1bdaf4e757c76f95e440e7de"],["/static/media/redux.59c46753.png","59c467536111a981d904a050d335c2be"],["/static/media/resume.81d89191.png","81d891919ad9d2d8321c508f8f6ca007"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});